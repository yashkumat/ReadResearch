{"ast":null,"code":"import { SET_POSTS, LIKE_POST, UNLIKE_POST, LOADING_DATA, DELETE_POST, POST_POST, SET_POST, SUBMIT_COMMENT } from '../types';\nconst initialState = {\n  posts: [],\n  post: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_POSTS:\n      return { ...state,\n        posts: action.payload,\n        loading: false\n      };\n\n    case SET_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case LIKE_POST:\n    case UNLIKE_POST:\n      let index = state.posts.findIndex(post => post.postId === action.payload.postId);\n      state.posts[index] = action.payload;\n\n      if (state.post.postId === action.payload.postId) {\n        state.post = action.payload;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_POST:\n      index = state.posts.findIndex(post => post.postId === action.payload);\n      state.posts.splice(index, 1);\n      return { ...state\n      };\n\n    case POST_POST:\n      return { ...state,\n        posts: [action.payload, ...state.posts]\n      };\n\n    case SUBMIT_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: [action.payload, ...state.post.comments]\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/redux/reducers/dataReducer.js"],"names":["SET_POSTS","LIKE_POST","UNLIKE_POST","LOADING_DATA","DELETE_POST","POST_POST","SET_POST","SUBMIT_COMMENT","initialState","posts","post","loading","state","action","type","payload","index","findIndex","postId","splice","comments"],"mappings":"AAAA,SACEA,SADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,cARF,QASO,UATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKX,SAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFT;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,QAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAKd,SAAL;AACA,SAAKC,WAAL;AACE,UAAIc,KAAK,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,SAAZ,CACTP,IAAD,IAAUA,IAAI,CAACQ,MAAL,KAAgBL,MAAM,CAACE,OAAP,CAAeG,MAD/B,CAAZ;AAGAN,MAAAA,KAAK,CAACH,KAAN,CAAYO,KAAZ,IAAqBH,MAAM,CAACE,OAA5B;;AACA,UAAIH,KAAK,CAACF,IAAN,CAAWQ,MAAX,KAAsBL,MAAM,CAACE,OAAP,CAAeG,MAAzC,EAAiD;AAC/CN,QAAAA,KAAK,CAACF,IAAN,GAAaG,MAAM,CAACE,OAApB;AACD;;AACD,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAKR,WAAL;AACEY,MAAAA,KAAK,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,SAAZ,CACLP,IAAD,IAAUA,IAAI,CAACQ,MAAL,KAAgBL,MAAM,CAACE,OAD3B,CAAR;AAGAH,MAAAA,KAAK,CAACH,KAAN,CAAYU,MAAZ,CAAmBH,KAAnB,EAA0B,CAA1B;AACA,aAAO,EACL,GAAGJ;AADE,OAAP;;AAGF,SAAKP,SAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,KAAK,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,KAA1B;AAFF,OAAP;;AAIF,SAAKF,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,IAAI,EAAE,EACJ,GAAGE,KAAK,CAACF,IADL;AAEJU,UAAAA,QAAQ,EAAE,CAACP,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,IAAN,CAAWU,QAA/B;AAFN;AAFD,OAAP;;AAOF;AACE,aAAOR,KAAP;AAnDJ;AAqDD","sourcesContent":["import {\n  SET_POSTS,\n  LIKE_POST,\n  UNLIKE_POST,\n  LOADING_DATA,\n  DELETE_POST,\n  POST_POST,\n  SET_POST,\n  SUBMIT_COMMENT\n} from '../types';\n\nconst initialState = {\n  posts: [],\n  post: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true\n      };\n    case SET_POSTS:\n      return {\n        ...state,\n        posts: action.payload,\n        loading: false\n      };\n    case SET_POST:\n      return {\n        ...state,\n        post: action.payload\n      };\n    case LIKE_POST:\n    case UNLIKE_POST:\n      let index = state.posts.findIndex(\n        (post) => post.postId === action.payload.postId\n      );\n      state.posts[index] = action.payload;\n      if (state.post.postId === action.payload.postId) {\n        state.post = action.payload;\n      }\n      return {\n        ...state\n      };\n    case DELETE_POST:\n      index = state.posts.findIndex(\n        (post) => post.postId === action.payload\n      );\n      state.posts.splice(index, 1);\n      return {\n        ...state\n      };\n    case POST_POST:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts]\n      };\n    case SUBMIT_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: [action.payload, ...state.post.comments]\n        }\n      };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}