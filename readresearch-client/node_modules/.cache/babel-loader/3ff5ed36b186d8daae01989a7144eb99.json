{"ast":null,"code":"var _jsxFileName = \"/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/components/CommentForm.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles'; // MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { submitComment } from '../redux/actions/dataActions';\nconst styles = {\n  button: {\n    margin: '10px',\n    postition: \"relative\",\n    left: \"85%\"\n  }\n};\n\nclass CommentForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      commentBody: '',\n      errors: {}\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.submitComment(this.props.postId, {\n        commentBody: this.state.commentBody\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        commentBody: ''\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      authenticated\n    } = this.props;\n    const errors = this.state.errors;\n    const commentFormMarkup = authenticated ? /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"commentBody\",\n      type: \"text\",\n      label: \"You Comment Here...\",\n      error: errors.comment ? true : false,\n      helperText: errors.comment,\n      value: this.state.commentBody,\n      onChange: this.handleChange,\n      fullWidth: true,\n      className: classes.textField,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      size: \"small\",\n      color: \"secondary\",\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Submit\")) : null;\n    return commentFormMarkup;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/components/CommentForm.js"],"names":["React","Component","withStyles","Button","TextField","connect","submitComment","styles","button","margin","postition","left","CommentForm","state","commentBody","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","postId","componentWillReceiveProps","nextProps","UI","loading","render","classes","authenticated","commentFormMarkup","comment","textField","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { submitComment } from '../redux/actions/dataActions';\n\nconst styles = {\n    button:{\n        margin:'10px',\n        postition:\"relative\",\n        left:\"85%\"\n    }\n};\n\nclass CommentForm extends Component {\n    state = {\n        commentBody: '',\n        errors: {}\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors });\n        }\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({ commentBody: '' });\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.submitComment(this.props.postId, { commentBody: this.state.commentBody });\n    };\n\n    render() {\n        const { classes, authenticated } = this.props;\n        const errors = this.state.errors;\n\n        const commentFormMarkup = authenticated ? (\n\n            <form onSubmit={this.handleSubmit}>\n                <TextField\n                    name=\"commentBody\"\n                    type=\"text\"\n                    label=\"You Comment Here...\"\n                    error={errors.comment ? true : false}\n                    helperText={errors.comment}\n                    value={this.state.commentBody}\n                    onChange={this.handleChange}\n                    fullWidth\n                    className={classes.textField}\n                    color=\"primary\"\n                />\n\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    size=\"small\"\n                    color=\"secondary\"\n                    className={classes.button}\n                >\n                    Submit\n                        </Button>\n            </form>\n\n        ) : null;\n        return commentFormMarkup;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI,\n    authenticated: state.user.authenticated\n});\n\nexport default connect(\n    mapStateToProps,\n    { submitComment }\n)(withStyles(styles)(CommentForm));"]},"metadata":{},"sourceType":"module"}