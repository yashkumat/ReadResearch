{"ast":null,"code":"var _jsxFileName = \"/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/components/PostPost.js\";\nimport React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton'; // MUI Stuff\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel'; // import Select from '../components/Select';\n// Redux stuff\n\nimport { connect } from 'react-redux';\nimport { postPost, clearErrors } from '../redux/actions/dataActions';\nconst styles = {\n  submitButton: {\n    position: 'relative',\n    float: 'right',\n    marginTop: 10\n  },\n  progressSpinner: {\n    position: 'absolute'\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '91%',\n    top: '6%'\n  },\n  textField: {\n    margin: \"10px\"\n  }\n};\n\nclass PostPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      title: '',\n      description: '',\n      url: '',\n      postCategory: '',\n      errors: {}\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.clearErrors();\n      this.setState({\n        open: false,\n        errors: {}\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.postPost({\n        title: this.state.title,\n        description: this.state.description,\n        url: this.state.url,\n        postCategory: this.state.postCategory\n      });\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n\n    if (!nextProps.UI.errors && !nextProps.UI.loading) {\n      this.setState({\n        title: '',\n        description: '',\n        url: '',\n        postCategory: '',\n        open: false,\n        errors: {}\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const [postCategory, setCategory] = React.useState('');\n\n    const handleChange = event => {\n      setCategory(event.target.value);\n    };\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Write a Post!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"Create a new Post\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      error: errors.title ? true : false,\n      helperText: errors.title,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      name: \"description\",\n      type: \"text\",\n      label: \"Description\",\n      multiline: true,\n      rows: 2,\n      error: errors.description ? true : false,\n      helperText: errors.description,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"category\",\n      id: \"category-select\",\n      value: postCategory,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'Social Science',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, \"Social Science\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'Physics',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, \"Physics\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'Chemistry',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, \"Chemistry\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'Mathematics',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, \"Mathematics\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'Biology',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, \"Biology\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'Litrature',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, \"Litrature\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 'Politics',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, \"Politics\"))), /*#__PURE__*/React.createElement(TextField, {\n      name: \"url\",\n      type: \"text\",\n      label: \"Orignal article Url\",\n      error: errors.url ? true : false,\n      helperText: errors.url,\n      className: classes.textField,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.submitButton,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"Submit\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progressSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postPost,\n  clearErrors\n})(withStyles(styles)(PostPost));","map":{"version":3,"sources":["/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/components/PostPost.js"],"names":["React","Component","Fragment","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","MenuItem","FormControl","Select","InputLabel","connect","postPost","clearErrors","styles","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","textField","margin","PostPost","state","open","title","description","url","postCategory","errors","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","UNSAFE_componentWillReceiveProps","nextProps","UI","loading","render","classes","setCategory","useState","formControl","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\n// MUI Stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddIcon from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n// import Select from '../components/Select';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { postPost, clearErrors } from '../redux/actions/dataActions';\n\nconst styles = {\n    submitButton: {\n        position: 'relative',\n        float: 'right',\n        marginTop: 10\n    },\n    progressSpinner: {\n        position: 'absolute'\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '91%',\n        top: '6%'\n    },\n    textField:{\n        margin:\"10px\",\n      \n    }\n};\n\nclass PostPost extends Component {\n    state = {\n        open: false,\n        title: '',\n        description:'',\n        url:'',\n        postCategory:'',\n        errors: {}\n    };\n    \n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n            this.setState({\n                errors: nextProps.UI.errors\n            });\n        }\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\n            this.setState({\n                title: '', description: '',\n                url: '', postCategory: '', open: false, errors: {} });\n        }\n    }\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n    handleClose = () => {\n        this.props.clearErrors();\n        this.setState({ open: false, errors: {} });\n    };\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.postPost({ title: this.state.title, description: this.state.description, url: this.state.url, postCategory: this.state.postCategory });\n    };\n    \n    render() {\n        const { errors } = this.state;\n        const {\n            classes,\n            UI: { loading }\n        } = this.props;\n\n        const [postCategory, setCategory] = React.useState('');\n\n        const handleChange = (event) => {\n            setCategory(event.target.value);\n        };\n        \n        return (\n            <Fragment>\n                <MyButton onClick={this.handleOpen} tip=\"Write a Post!\">\n                    <AddIcon color=\"secondary\"/>\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <MyButton\n                        tip=\"Close\"\n                        onClick={this.handleClose}\n                        tipClassName={classes.closeButton}\n                    >\n                        <CloseIcon color=\"error\"/>\n                    </MyButton>\n                    <DialogTitle>Create a new Post</DialogTitle>\n                    <DialogContent>\n                        <form onSubmit={this.handleSubmit}>\n                            <TextField\n                                name=\"title\"\n                                type=\"text\"\n                                label=\"Title\"\n                                error={errors.title ? true : false}\n                                helperText={errors.title}\n                                className={classes.textField}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                            <TextField\n                                name=\"description\"\n                                type=\"text\"\n                                label=\"Description\"\n                                multiline\n                                rows={2}\n                                error={errors.description ? true : false}\n                                helperText={errors.description}\n                                className={classes.textField}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"category\">Category</InputLabel>\n                                <Select\n                                    labelId=\"category\"\n                                    id=\"category-select\"\n                                    value={postCategory}\n                                    onChange={handleChange}\n                                >\n                                    <MenuItem value={'Social Science'}>Social Science</MenuItem>\n                                    <MenuItem value={'Physics'}>Physics</MenuItem>\n                                    <MenuItem value={'Chemistry'}>Chemistry</MenuItem>\n                                    <MenuItem value={'Mathematics'}>Mathematics</MenuItem>\n                                    <MenuItem value={'Biology'}>Biology</MenuItem>\n                                    <MenuItem value={'Litrature'}>Litrature</MenuItem>\n                                    <MenuItem value={'Politics'}>Politics</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <TextField\n                                name=\"url\"\n                                type=\"text\"\n                                label=\"Orignal article Url\"\n                                error={errors.url ? true : false}\n                                helperText={errors.url}\n                                className={classes.textField}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.submitButton}\n                                disabled={loading}\n                            >\n                                Submit\n                {loading && (\n                                    <CircularProgress\n                                        size={30}\n                                        className={classes.progressSpinner}\n                                    />\n                                )}\n                            </Button>\n                        </form>\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    UI: state.UI\n});\n\nexport default connect(\n    mapStateToProps,\n    { postPost, clearErrors }\n)(withStyles(styles)(PostPost));"]},"metadata":{},"sourceType":"module"}