{"ast":null,"code":"var _jsxFileName = \"/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/components/PostDialog.js\";\nimport React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\nimport LikeButton from './LikeButton';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport { connect } from 'react-redux';\nimport { getPost, clearErrors } from '../redux/actions/dataActions';\nconst styles = {\n  profileImage: {\n    maxWidth: 75,\n    height: 75,\n    borderRadius: '50%',\n    objectFit: 'cover'\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: 'absolute',\n    left: '90%',\n    marginBottom: \"10px\"\n  },\n  expandButton: {\n    position: 'relative',\n    left: \"0%\"\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginTop: 50,\n    marginBottom: 50\n  },\n  title: {\n    padding: \"10px\"\n  },\n  description: {\n    padding: \"10px\"\n  },\n  category: {\n    padding: \"10px\"\n  },\n  url: {\n    padding: \"10px\"\n  },\n  createdAt: {\n    position: 'relative',\n    left: '70%'\n  },\n  profile: {\n    marginTop: \"30px\"\n  }\n};\n\nclass PostDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: ''\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const {\n        username,\n        postId\n      } = this.props;\n      const newPath = `/users/${username}/post/${postId}`;\n      if (oldPath === newPath) oldPath = `/users/${username}`;\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getPost(this.props.postId);\n    };\n\n    this.handleClose = () => {\n      window.history.pushState(null, null, this.state.oldPath);\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      post: {\n        postId,\n        title,\n        description,\n        url,\n        createdAt,\n        likeCount,\n        commentCount,\n        postCategory,\n        imageUrl,\n        username,\n        comments\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 50,\n      thickness: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      lg: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\",\n      className: classes.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"textPrimary\",\n      component: Link,\n      to: `/user/${username}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, username))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      lg: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textPrimary\",\n      className: classes.category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, postCategory), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"textPrimary\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, title), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textPrimary\",\n      className: classes.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, description), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"textPrimary\",\n      component: Link,\n      to: url,\n      className: classes.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, \" \", url)), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.invisibleSeparator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"textSecondary\",\n      className: classes.createdAt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, dayjs(createdAt).format('h:mm a, MMMM DD YYYY')), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(LikeButton, {\n      postId: postId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, likeCount, \" Recommends\"), /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(QuestionAnswerIcon, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, commentCount, \" Comments\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 9,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CommentForm, {\n      postId: postId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Comments, {\n      comments: comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand post\",\n      tipClassName: classes.expandButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.dialogContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, dialogMarkup)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.data.post,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getPost,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(PostDialog));","map":{"version":3,"sources":["/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/components/PostDialog.js"],"names":["React","Component","Fragment","withStyles","MyButton","LikeButton","Comments","CommentForm","dayjs","Link","Divider","QuestionAnswerIcon","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","connect","getPost","clearErrors","styles","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","marginBottom","expandButton","spinnerDiv","textAlign","marginTop","title","description","category","url","createdAt","profile","PostDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","username","postId","props","history","pushState","setState","handleClose","componentDidMount","openDialog","render","classes","post","likeCount","commentCount","postCategory","imageUrl","comments","UI","loading","dialogMarkup","invisibleSeparator","format","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\nimport LikeButton from './LikeButton';\nimport Comments from './Comments';\nimport CommentForm from './CommentForm';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\nimport { connect } from 'react-redux';\nimport { getPost, clearErrors } from '../redux/actions/dataActions';\n\nconst styles = {\n    profileImage: {\n        maxWidth: 75,\n        height: 75,\n        borderRadius: '50%',\n        objectFit: 'cover'\n    },\n    dialogContent: {\n        padding: 20\n    },\n    closeButton: {\n        position: 'absolute',\n        left: '90%',\n        marginBottom: \"10px\",\n    },\n    expandButton: {\n        position: 'relative',\n        left: \"0%\"\n    },\n    spinnerDiv: {\n        textAlign: 'center',\n        marginTop: 50,\n        marginBottom: 50\n    },\n    title: {\n        padding: \"10px\",\n    },\n    description: {\n        padding: \"10px\",\n    },\n    category: {\n        padding: \"10px\",\n    },\n    url: {\n        padding: \"10px\",\n    },\n    createdAt: {\n        position: 'relative',\n        left: '70%',\n    },\n    profile: {\n        marginTop: \"30px\"\n    }\n};\n\nclass PostDialog extends Component {\n    state = {\n        open: false,\n        oldPath: '',\n        newPath: ''\n    };\n    componentDidMount() {\n        if (this.props.openDialog) {\n            this.handleOpen();\n        }\n    }\n    handleOpen = () => {\n        let oldPath = window.location.pathname;\n\n        const { username, postId } = this.props;\n        const newPath = `/users/${username}/post/${postId}`;\n\n        if (oldPath === newPath) oldPath = `/users/${username}`;\n\n        window.history.pushState(null, null, newPath);\n\n        this.setState({ open: true, oldPath, newPath });\n        this.props.getPost(this.props.postId);\n    };\n    handleClose = () => {\n        window.history.pushState(null, null, this.state.oldPath);\n        this.setState({ open: false });\n        this.props.clearErrors();\n    };\n\n    render() {\n        const {\n            classes,\n            post: {\n                postId,\n                title,\n                description,\n                url,\n                createdAt,\n                likeCount,\n                commentCount,\n                postCategory,\n                imageUrl,\n                username,\n                comments\n            },\n            UI: { loading }\n        } = this.props;\n\n        const dialogMarkup = loading ? (\n            <div className={classes.spinnerDiv}>\n                <CircularProgress size={50} thickness={2} />\n            </div>\n        ) : (\n                <Grid container>\n                    <Grid item sm={12} lg={3}>\n                        <Grid\n                            container\n                            spacing={0}\n                            direction=\"column\"\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            className={classes.profile}\n                        >\n                            <img src={imageUrl} alt=\"Profile\" className={classes.profileImage} />\n\n                            <Typography\n                                variant=\"caption\"\n                                color=\"textPrimary\"\n                                component={Link}\n                                to={`/user/${username}`}\n                            >\n                                {username}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item sm={12} lg={9}>\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textPrimary\"\n                            className={classes.category}\n                        >\n                            {postCategory}\n                        </Typography>\n                        <Typography\n                            variant=\"h5\"\n                            color=\"textPrimary\"\n                            className={classes.title}\n                        >\n                            {title}\n                        </Typography>\n                        <Divider />\n                        <Typography\n                            variant=\"body1\"\n                            color=\"textPrimary\"\n                            className={classes.description}\n                        >\n                            {description}\n                        </Typography>\n                        <Typography\n                            variant=\"caption\"\n                            color=\"textPrimary\"\n                            component={Link}\n                            to={url}\n                            className={classes.url}\n                        >\n                            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                                {\" \"}\n                                {url}\n                            </a>\n                        </Typography>\n                        <hr className={classes.invisibleSeparator} />\n                        <Typography\n                            variant=\"caption\"\n                            color=\"textSecondary\"\n                            className={classes.createdAt}\n                        >\n                            {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\n                        </Typography>\n                        <br />\n                        <LikeButton postId={postId} />\n                        <span>{likeCount} Recommends</span>\n                        <MyButton tip=\"comments\">\n                            <QuestionAnswerIcon color=\"secondary\" />\n                        </MyButton>\n                        <span>{commentCount} Comments</span>\n                    </Grid>\n                    <Grid item sm={9} lg={12}>\n                        <CommentForm postId={postId} />\n                    </Grid>\n                    <hr />\n                    <Comments comments={comments} />\n                </Grid>\n            );\n        return (\n            <Fragment>\n                <MyButton\n                    onClick={this.handleOpen}\n                    tip=\"Expand post\"\n                    tipClassName={classes.expandButton}\n                >\n                    <UnfoldMore color=\"primary\" />\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                >\n                    <MyButton\n                        tip=\"Close\"\n                        onClick={this.handleClose}\n                        tipClassName={classes.closeButton}\n                    >\n                        <CloseIcon color=\"error\" />\n                    </MyButton>\n                    <br />\n                    <DialogContent className={classes.dialogContent}>\n                        {dialogMarkup}\n                    </DialogContent>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    post: state.data.post,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    getPost,\n    clearErrors\n};\n\nexport default connect(\n    mapStateToProps,\n    mapActionsToProps\n)(withStyles(styles)(PostDialog));"]},"metadata":{},"sourceType":"module"}