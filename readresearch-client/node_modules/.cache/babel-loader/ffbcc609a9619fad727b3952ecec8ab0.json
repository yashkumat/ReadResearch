{"ast":null,"code":"import { SET_USER, SET_UNAUTHENTICATED, SET_AUTHENTICATED, LOADING_USER, LIKE_POST, UNLIKE_POST, MARK_NOTIFICATIONS_READ } from \"../types\";\nconst initialState = {\n  authenticated: false,\n  userData: {},\n  likes: [],\n  notifications: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return {\n        initialState\n      };\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        ...action.payload,\n        loading: false\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_POST:\n      return { ...state,\n        likes: [...state.likes, {\n          username: state.userData.username,\n          postId: action.payload.postId\n        }]\n      };\n\n    case UNLIKE_POST:\n      return { ...state,\n        likes: state.likes.filter(like => like.postId !== action.payload.PostId)\n      };\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_UNAUTHENTICATED","SET_AUTHENTICATED","LOADING_USER","LIKE_POST","UNLIKE_POST","MARK_NOTIFICATIONS_READ","initialState","authenticated","userData","likes","notifications","loading","state","action","type","payload","username","postId","filter","like","PostId","forEach","not","read"],"mappings":"AAAA,SACEA,QADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,YAJF,EAKEC,SALF,EAMEC,WANF,EAOEC,uBAPF,QAQO,UARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,aAAa,EAAE,EAJI;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,aAAa,EAAE;AAFV,OAAP;;AAIF,SAAKP,mBAAL;AACE,aAAO;AACLM,QAAAA;AADK,OAAP;;AAGF,SAAKP,QAAL;AACE,aAAO;AACLQ,QAAAA,aAAa,EAAE,IADV;AAEL,WAAGM,MAAM,CAACE,OAFL;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKR,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,KAAK,EAAE,CACL,GAAGG,KAAK,CAACH,KADJ,EAEL;AACEO,UAAAA,QAAQ,EAAEJ,KAAK,CAACJ,QAAN,CAAeQ,QAD3B;AAEEC,UAAAA,MAAM,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAFzB,SAFK;AAFF,OAAP;;AAUF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYS,MAAZ,CACJC,IAAD,IAAUA,IAAI,CAACF,MAAL,KAAgBJ,MAAM,CAACE,OAAP,CAAeK,MADpC;AAFF,OAAP;;AAMF,SAAKf,uBAAL;AACEO,MAAAA,KAAK,CAACF,aAAN,CAAoBW,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,aAAO,EACL,GAAGX;AADE,OAAP;;AAGF;AACE,aAAOA,KAAP;AA7CJ;AA+CD","sourcesContent":["import {\n  SET_USER,\n  SET_UNAUTHENTICATED,\n  SET_AUTHENTICATED,\n  LOADING_USER,\n  LIKE_POST,\n  UNLIKE_POST,\n  MARK_NOTIFICATIONS_READ,\n} from \"../types\";\n\nconst initialState = {\n  authenticated: false,\n  userData: {},\n  likes: [],\n  notifications: [],\n  loading: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return {\n        ...state,\n        authenticated: true,\n      };\n    case SET_UNAUTHENTICATED:\n      return {\n        initialState,\n      };\n    case SET_USER:\n      return {\n        authenticated: true,\n        ...action.payload,\n        loading: false\n      };\n    case LOADING_USER:\n      return {\n        ...state,\n        loading: true\n      };\n    case LIKE_POST:\n      return {\n        ...state,\n        likes: [\n          ...state.likes,\n          {\n            username: state.userData.username,\n            postId: action.payload.postId\n          }\n        ]\n      };\n    case UNLIKE_POST:\n      return {\n        ...state,\n        likes: state.likes.filter(\n          (like) => like.postId !== action.payload.PostId\n        )\n      };\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach((not) => (not.read = true));\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}