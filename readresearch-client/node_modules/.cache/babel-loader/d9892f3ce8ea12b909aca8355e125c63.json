{"ast":null,"code":"import { SET_POSTS, LOADING_DATA, LIKE_POST, UNLIKE_POST, DELETE_POST, SET_ERRORS, POST_POST, CLEAR_ERRORS, LOADING_UI, SET_POST, STOP_LOADING_UI, SUBMIT_COMMENT } from '../types';\nimport axios from 'axios';\nexport const getPosts = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/posts').then(res => {\n    dispatch({\n      type: SET_POSTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getPost = postId => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.get(`/post/${postId}`).then(res => {\n    dispatch({\n      type: SET_POST,\n      payload: res.data\n    });\n    dispatch({\n      type: STOP_LOADING_UI\n    });\n  }).catch(err => console.log(err));\n};\nexport const postPost = newPost => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/post', newPost).then(res => {\n    dispatch({\n      type: POST_POST,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n}; // Like a scream\n\nexport const likePost = postId => dispatch => {\n  axios.get(`/post/${postId}/like`).then(res => {\n    dispatch({\n      type: LIKE_POST,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Unlike a scream\n\nexport const unlikePost = postId => dispatch => {\n  axios.get(`/post/${postId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_POST,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Submit a comment\n\nexport const submitComment = (postId, commentBody) => dispatch => {\n  axios.post(`/post/${postId}/comment`, commentBody).then(res => {\n    dispatch({\n      type: SUBMIT_COMMENT,\n      payload: res.data\n    });\n    dispatch(clearErrors());\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const deletePost = postId => dispatch => {\n  axios.delete(`/post/${postId}`).then(() => {\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n  }).catch(err => console.log(err));\n};\nexport const getUserData = username => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/user/${username}`).then(res => {\n    dispatch({\n      type: SET_POSTS,\n      payload: res.data.posts\n    });\n  }).catch(() => {\n    dispatch({\n      type: SET_POSTS,\n      payload: null\n    });\n  });\n};\nexport const getUser = username => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get(`/user/${username}`).then(res => {\n    dispatch({\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/redux/actions/dataActions.js"],"names":["SET_POSTS","LOADING_DATA","LIKE_POST","UNLIKE_POST","DELETE_POST","SET_ERRORS","POST_POST","CLEAR_ERRORS","LOADING_UI","SET_POST","STOP_LOADING_UI","SUBMIT_COMMENT","axios","getPosts","dispatch","type","get","then","res","payload","data","catch","err","response","getPost","postId","console","log","postPost","newPost","post","clearErrors","likePost","unlikePost","submitComment","commentBody","deletePost","delete","getUserData","username","posts","getUser"],"mappings":"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","sourcesContent":["import {\n    SET_POSTS,\n    LOADING_DATA,\n    LIKE_POST,\n    UNLIKE_POST,\n    DELETE_POST,\n    SET_ERRORS,\n    POST_POST,\n    CLEAR_ERRORS,\n    LOADING_UI,\n    SET_POST,\n    STOP_LOADING_UI,\n    SUBMIT_COMMENT\n} from '../types';\nimport axios from 'axios';\n\nexport const getPosts = () => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n        .get('/posts')\n        .then((res) => {\n            dispatch({\n                type: SET_POSTS,\n                payload: res.data\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};\nexport const getPost = (postId) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n        .get(`/post/${postId}`)\n        .then((res) => {\n            dispatch({\n                type: SET_POST,\n                payload: res.data\n            });\n            dispatch({ type: STOP_LOADING_UI });\n        })\n        .catch((err) => console.log(err));\n};\n\nexport const postPost = (newPost) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios\n        .post('/post', newPost)\n        .then((res) => {\n            dispatch({\n                type: POST_POST,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};\n// Like a scream\nexport const likePost = (postId) => (dispatch) => {\n    axios\n        .get(`/post/${postId}/like`)\n        .then((res) => {\n            dispatch({\n                type: LIKE_POST,\n                payload: res.data\n            });\n        })\n        .catch((err) => console.log(err));\n};\n// Unlike a scream\nexport const unlikePost = (postId) => (dispatch) => {\n    axios\n        .get(`/post/${postId}/unlike`)\n        .then((res) => {\n            dispatch({\n                type: UNLIKE_POST,\n                payload: res.data\n            });\n        })\n        .catch((err) => console.log(err));\n};\n// Submit a comment\nexport const submitComment = (postId, commentBody) => (dispatch) => {\n    axios\n        .post(`/post/${postId}/comment`, commentBody)\n        .then((res) => {\n            dispatch({\n                type: SUBMIT_COMMENT,\n                payload: res.data\n            });\n            dispatch(clearErrors());\n        })\n        .catch((err) => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};\nexport const deletePost = (postId) => (dispatch) => {\n    axios\n        .delete(`/post/${postId}`)\n        .then(() => {\n            dispatch({ type: DELETE_POST, payload: postId });\n        })\n        .catch((err) => console.log(err));\n};\n\nexport const getUserData = (username) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n        .get(`/user/${username}`)\n        .then((res) => {\n            dispatch({\n                type: SET_POSTS,\n                payload: res.data.posts\n            });\n        })\n        .catch(() => {\n            dispatch({\n                type: SET_POSTS,\n                payload: null\n            });\n        });\n};\n\nexport const getUser = (username) => (dispatch) => {\n    dispatch({ type: LOADING_DATA });\n    axios\n        .get(`/user/${username}`)\n        .then((res) => {\n            dispatch({\n                payload: res.data\n            });\n        })\n        .catch((err)=>console.log(err));\n};\n\nexport const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n};"]},"metadata":{},"sourceType":"module"}