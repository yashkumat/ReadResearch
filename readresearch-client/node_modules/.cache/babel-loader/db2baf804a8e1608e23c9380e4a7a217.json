{"ast":null,"code":"var _jsxFileName = \"/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/pages/user.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Posts from '../components/Posts';\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\nimport StaticProfile from '../components/StaticProfile';\nimport Button from '@material-ui/core/Button';\n\nclass user extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postIdParam: null,\n      username: null\n    };\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.setState({\n      username\n    });\n    const postId = this.props.match.params.postId;\n    if (postId) this.setState({\n      postIdParam: postId\n    });\n    this.props.getUserData(username);\n  }\n\n  handleBack() {\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const {\n      posts,\n      loading\n    } = this.props.data;\n    const {\n      postIdParam\n    } = this.state;\n    const postsMarkup = loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, \"Loading...\") : posts === null ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, \"No Posts\") : !postIdParam ? posts.map(post => /*#__PURE__*/React.createElement(Posts, {\n      key: post.postId,\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 31\n      }\n    })) : posts.map(post => {\n      if (post.postId !== postIdParam) {\n        return /*#__PURE__*/React.createElement(Posts, {\n          key: post.postId,\n          post: post,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(Posts, {\n          key: post.postId,\n          post: post,\n          openDialog: this.props.openDialog,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 24\n          }\n        });\n      }\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleBack,\n      color: \"secondary\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, postsMarkup), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StaticProfile, {\n      username: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(user);","map":{"version":3,"sources":["/Users/yashkumat/Desktop/ReadResearch/readresearch-client/src/pages/user.js"],"names":["React","Component","Grid","Posts","connect","getUserData","StaticProfile","Button","user","state","postIdParam","username","componentDidMount","props","match","params","setState","postId","handleBack","window","location","href","render","posts","loading","data","postsMarkup","map","post","openDialog","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Posts from '../components/Posts';\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\nimport StaticProfile from '../components/StaticProfile';\nimport Button from '@material-ui/core/Button';\n\nclass user extends Component {\n   \n  state = {\n    postIdParam:null,\n    username:null\n  };\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n    this.setState({\n      username\n    })\n    const postId = this.props.match.params.postId;\n    \n    if (postId) this.setState({ postIdParam: postId });\n\n    this.props.getUserData(username);\n  }\n\n  handleBack() {\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { posts, loading } = this.props.data;\n\n    const { postIdParam } = this.state;\n    const postsMarkup = loading ? (\n      <p>Loading...</p>\n    ) : posts === null ? (\n      <p>No Posts</p>\n    ) : (\n      !postIdParam ? (\n          posts.map((post) => <Posts key={post.postId} post={post} />)\n    ) : (\n        posts.map((post) =>{\n            if(post.postId !== postIdParam ){\n                return  <Posts key={post.postId} post={post} />\n            }else{\n                return <Posts key={post.postId} post={post} openDialog={this.props.openDialog}/>\n            }\n        })\n    )\n    )\n    return (\n      <Grid container spacing={4}>\n        <Grid item sm={12} xs={12}>\n          <Button\n            variant=\"contained\"\n            onClick={this.handleBack}\n            color=\"secondary\"\n            justify=\"center\"\n          >\n            Back\n          </Button>\n        </Grid>\n        <Grid item sm={8} xs={12}>\n          {postsMarkup}\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          <StaticProfile username={this.state.username}/>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.data\n});\n\nexport default connect(\n    mapStateToProps,\n    { getUserData }\n)(user);"]},"metadata":{},"sourceType":"module"}